#!/usr/bin/env perl
# 2014-04-02, Adam Bryt
# Filtr konwertujący plain text UTF-8 do PDF.

use strict;
use warnings;
use v5.14;

use File::Temp qw(tempdir);
use Try::Tiny;
use File::Basename qw(basename);

my $PDFLATEX    = "pdflatex -halt-on-error";  # Kompilator latex -> pdf
my $TEXFNAME    = "document.tex";  # Nazwa tymczasowego pliku LaTeX
my $PDFFNAME    = "document.pdf";  # Nazwa tymczasowego pliku PDF
my $LOGFNAME    = "pdflatex.log";  # Log z kompilacji przez pdflatex
my $DIRTEMPLATE = "a2pdf_XXXXXX";  # Template nazwy katalogu tymczasowego
my $CONF_FILE   = "$ENV{HOME}/.a2pdf.conf";
my $PROGNAME    = basename($0);

my $USAGE = <<EOS;
usage: $PROGNAME [-dv] [-c FILE] [-o FILE] [-t TITLE] [FILE ...]
EOS

my $Opts = {};
my $Conf = {};
my $Verbose = 0;

sub init_signals {
    $SIG{__WARN__} = sub {
        my ($m) = @_;
        warn "$PROGNAME: $m";
    };
}

sub usage {
    print STDERR $USAGE;
    exit 1;
}

sub fatal {
    my ($fmt, @vals) = @_;

    my $m = sprintf($fmt, @vals);
    $m = "$PROGNAME: $m";
    $m .= "\n" if substr($m, -1) ne "\n";
    print STDERR $m;
    exit 1;
}

sub info {
    my ($m) = @_;
    say STDERR $m if $Verbose;
}

sub keep_tempdir {
    my ($dir) = @_;

    say STDERR "$PROGNAME: working files are in tempdir: $dir";
    $File::Temp::KEEP_ALL = 1;
}

sub parse_options {
    use Getopt::Long;
    Getopt::Long::Configure("bundling");

    GetOptions($Opts, "d", "v", "c=s", "o=s", "t=s")
        || usage();

    if ($Opts->{v}) { $Verbose = 1 }
}

sub read_config {
    my ($file) = @_;

    info("Parsing config file: '$file'");

    use File::Slurp;
    my $str;
    try {
        $str = read_file($file);
    } catch {
        fatal("Can't read config data from: '%s': %s", $file, $_);
    };

    use YAML;
    my $cnf;
    try {
        $cnf = Load($str);
    } catch {
        fatal("Can't parse config data from: '%s': %s", $file, $_);
    };

    return $cnf;
}

sub parse_config {
    # Konfiguracja wbudowana
    my $cnf = read_config(\*DATA);
    %$Conf = ( %$Conf, %$cnf );

    # Domyślny plik konfiguracyjny
    if (-e $CONF_FILE) {
        $cnf = read_config($CONF_FILE);
        %$Conf = ( %$Conf, %$cnf );
    }

    # Plik konfiguracyjny z opcji
    if (defined $Opts->{c}) {
        $cnf = read_config($Opts->{c});
        %$Conf = ( %$Conf, %$cnf );
    }
}

sub quote_special {
    my ($str) = @_;

    # Znaki specjalne latexa: $ & % # _ { } ~ ^ \
    state $spec = {
        '$' => '\$',
        '&' => '\&',
        '%' => '\%',
        '#' => '\#',
        '_' => '\_',
        '{' => '\{',
        '}' => '\}',
        '~' => '\textasciitilde{}',
        '^' => '\textasciicircum{}',
        '\\' => '\textbackslash{}',
    };

    my @a = split(//, $str);
    @a = map {
        my $ch = $_;
        if ($spec->{$ch}) {
            $spec->{$ch};
        }
        else {
            $ch;
        }
    } @a;

    return join("", @a);
}

sub prepare_docprefix {
    info("Preparing latex document");

    # Ustawienie nazwy dokumentu w nagłówku strony

    my $filename;

    if (defined $Opts->{t}) {
        $filename = $Opts->{t};
    }
    elsif (@ARGV) {
        $filename = join(", ", @ARGV);
    }
    else {
        $filename = "STDIN";
    }

    $filename = quote_special($filename);
    $Conf->{docprefix} =~ s/\@\@LHEAD\@\@/$filename/;
}

sub make_tempdir {
    info("Creating temporary working directory");

    my $dont_clean = $Opts->{d};
    my $dir = tempdir(
        CLEANUP  => ! $dont_clean,
        TMPDIR   => 1,
        TEMPLATE => $DIRTEMPLATE
    );

    say STDERR "$PROGNAME: tempdir: $dir" if $dont_clean;
    info("\ttempdir: $dir");

    return $dir;
}

sub create_tex_document {
    my ($dir) = @_;

    info("Creating latex document");
    info("\tdocument: $dir/$TEXFNAME");

    my $fname = "$dir/$TEXFNAME";

    open(my $fh, ">", $fname)
        || do {
            keep_tempdir($dir);
            fatal("Can't open file for writing: '%s': %s", $fname, $!);
        };

    print $fh $Conf->{docprefix};
    print $fh $_ while <>;
    print $fh $Conf->{docsuffix};

    close $fh;
}

sub compile_tex_document {
    my ($dir) = @_;

    info("Compiling latex document");
    info("\tlog: $dir/$LOGFNAME");

    use Cwd qw(getcwd);
    my $olddir = getcwd();

    chdir($dir)
        || do {
            keep_tempdir($dir);
            fatal("Can't chdir to %s: %s", $dir, $!);
        };

    my $cmd = "$PDFLATEX $TEXFNAME > $LOGFNAME";

    # Kompilacja dwa razy - dla pageref
    if ( (system($cmd) != 0) or (system($cmd) != 0) ) {
        keep_tempdir($dir);
        fatal("Error in command: %s: %s: %s", $cmd, $!, $?);
    }

    chdir($olddir)
        || do {
            keep_tempdir($dir);
            fatal("Can't chdir to %s: %s", $olddir, $!);
        };
}

sub dump_pdf {
    my ($dir) = @_;

    info("Copying PDF document");

    use File::Copy;
    my $pdf = "$dir/$PDFFNAME";
    my $out = $Opts->{o};

    if ( defined($out) and ($out ne "-") ) {
        copy($pdf, $out)
            || fatal("Can't copy '%s' to '%s': %s", $pdf, $out, $!);
    }
    else {
        copy($pdf, \*STDOUT)
            || fatal("Can't copy '%s' to '%s': %s", $pdf, "STDOUT", $!);
    }
}

sub main {
    init_signals();
    parse_options();
    parse_config();
    prepare_docprefix();

    my $dir = make_tempdir();

    create_tex_document($dir);
    compile_tex_document($dir);
    dump_pdf($dir);
}

main();


=encoding utf8

=head1 NAME

B<a2pdf> - konwertuje tekst do PDF

=head1 SYNOPSIS

B<a2pdf> [B<-dv>] [B<-c> I<FILE>] [B<-o> I<FILE>] [B<-t> I<TITLE>] [I<FILE> I<...>]

=head1 DESCRIPTION

Skrypt B<a2pdf> jest filtrem konwertującym tekst (plain text) do formatu
PDF. Potrafi konwertować tekst z polskimi znakami kodowanymi w UTF-8.
Zastosowaniem filtru może być drukowanie z edytora Vim.

Do konwersji jest używany C<pdflatex> -- tworzony jest tymczasowy
dokument LaTeXa z konwertowanym tekstem umieszczonym w środowisku
C<verbatim>, dokument jest kompilowany przez C<pdflatex> i zwracany jest
wynikowy PDF.

=head1 OPTIONS

=over

=item B<-d>

Nie kasuje katalogu tymczasowego z plikami roboczymi. Dodatkowo
wyświetla na STDERR nazwę katalogu tymczasowego.

=item B<-v>

Wyświetla informacje o tym co robi (verbose).

=item B<-c> I<FILE>

Specyfikuje plik konfiguracyjny. Domyślnie C<~/.a2pdf.conf>.

=item B<-o> I<FILE>

Opcja powoduje zapisanie wynikowego PDFu do pliku I<FILE> (output file).
Jeśli nazwą pliku I<FILE> jest "-", lub nie ma opcji B<-o>, to wynikowy
PDF jest wysyłany na I<STDOUT>.

=item B<-t> I<TITLE>

Tytuł dokumentu umieszczany w nagłówku strony. Domyślnie jest to nazwa
pliku, który jest argumentem skryptu, lub STDIN.

=back

=head1 CONFIG

Domyślna konfiguracja jest zawarta w skrypcie w sekcji C<__DATA__>.
Można ją zmienić używając pliku konfiguracyjnego F<~/.a2pdf.conf> lub
podanego w opcji -c. Przykładowy plik konfiguracyjny znajduje się w
F<examples/a2pdf.conf>.

Plik konfiguracyjny używa formatu YAML. Klucz C<docprefix> definiuje
preambułę i początek dokumentu w LaTeXu, a klucz C<docsuffix> końcówkę
dokumentu.

=head1 ERRORS

Zwraca status 0 w przypadku powodzenia, a >0 gdy wystąpił błąd. Katalog
tymczasowy nie jest usuwany gdy wystąpił błąd podczas tworzenia
dokumentu PDF.

=head1 EXAMPLES

Poniższe trzy przykłady są równoważne i powodują konwersję pliku
tekstowego C<x.txt> do formatu PDF i zapisanie go w pliku C<x.pdf>:

    $ a2pdf -o x.pdf x.txt
    $ cat x.txt | a2pdf > x.pdf
    $ cat x.txt | a2pdf -o x.pdf

=head1 BUGS

Konwertowany plik tekstowy nie może zawierać napisu:

    \end{verbatim}

Ograniczenie jest spowodowane użyciem LaTeXa i środowiska C<verbatim> -
wystąpienie takiego napisu powoduje przedwczesne zakończenie kompilacji.

=head1 FILES

=over

=item F<~/.a2pdf.conf>

Domyślny plik konfiguracyjny. Jeśli nie istnieje to używana jest
konfiguracja wbudowana w skrypcie w sekcji __DATA__.

=item F</tmp/a2pdf_XXXXXX>

Katalog tymczasowy tworzony dla kompilacji LaTeXa do PDFu. Zawiera
tymczasowe pliki:

=over

=item F<document.tex>

Plik w LaTeXu generowany przez skrypt.

=item F<pdflatex.log>

Log z kompilacji przez C<pdflatex> pliku C<document.tex>.

=item F<document.pdf>

Wynikowy plik PDF.

=back

=back

=head1 AUTHOR

Adam Bryt <adam.bryt at gmx dot com>, 2014-04-05

=cut


__DATA__

# -*- yaml -*-
---
docprefix: |
    \documentclass[a4paper,11pt]{article}

    \usepackage{polski}
    \usepackage[utf8]{inputenc}
    \usepackage[T1]{fontenc}
    \usepackage{lmodern}

    % Znaki specjalne przez polecenia
    \usepackage{textcomp}

    % Ustawienie marginesów:
    \usepackage[margin=1in]{geometry}

    % Konfiguracja nagłówków i stopek:
    \usepackage{fancyhdr}
    \usepackage{lastpage}
    \lhead{@@LHEAD@@}
    %\chead{}
    \rhead{\thepage{} / \pageref{LastPage}}
    %\lfoot{}
    \cfoot{}
    %\rfoot{}
    %\renewcommand{\headrulewidth}{0.4pt}
    %\renewcommand{\footrulewidth}{0pt}
    \pagestyle{fancy}
    \setlength{\headheight}{14pt}  % Poprawia warningi.

    % Aktywne linki w dokumencie PDF:
    \usepackage{bookmark}
    \usepackage{hyperref}
    \hypersetup{
      pdftitle={},
      pdfsubject={},
      pdfauthor={},
      hidelinks,
      pdfdisplaydoctitle=true,
      colorlinks,
      allcolors=blue,
    }

    \begin{document}
    \begin{verbatim}
docsuffix: |
    \end{verbatim}
    \end{document}
